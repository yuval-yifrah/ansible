---
- name: manage ec2
  hosts: all
  gather_facts: false
  become: yes

  tasks: 
  - name: set hostname based on name tag
    hostname:
      name: "{{ hostvars[inventory_hostname].tags.Name }}"
  - name: extract and install the services and specific version from the tags 
    ansible.builtin.yum:
      name: "{{ hostvars[inventory_hostname].tags.Service }}-{{ hostvars[inventory_hostname].tags.Version | default(omit) }}"
      state: present

  - name: set restart
    set_fact:
      r_day: "{{ hostvars[inventory_hostname].tags.Restart.split()[0] }}"
      time: "{{ hostvars[inventory_hostname].tags.Restart.split()[2] }}"
  - name: convert text to time
    set_fact:
      restart_hour: >-
        {% if time == 'midnight' %}
        0
        {% else %}
        {{ (time.split(':')[0] | int + (12 if 'pm' in hostvars[inventory_hostname].tags.Restart | lower else 0)) % 24}}
        {% endif %}
      restart_min: >-
        {% if time == 'midnight' %}
        0 
        {% else %}
        {{ time.split(':')[1] | int }} {% endif %}
  - name: Install cronie 
    ansible.builtin.yum:
      name: cronie
      state: present

  - name: cron restart
    ansible.builtin.cron:
      name: "reboot"
      day: "{{ r_day }}"
      hour: "{{ restart_hour }}"
      minute: "{{ restart_min }}"
      job: "/sbin/shoudown -r now"

